AWSTemplateFormatVersion: 2010-09-09
Description: CloudRIG

Parameters:
  InstanceSpotMaximumPrice:
    Type: String
    Description: The maximum spot price for your CloudRIG instance

  InstanceSize:
    Type: String
    Default: g3s.xlarge
    AllowedValues: ["g2.2xlarge", "g3s.xlarge", "g3.4xlarge"]
    Description: The instance size that CloudRIG is running

  InstanceAMIId:
    Type: AWS::EC2::Image::Id
    Description: The AMI Id to use for the CloudRIG instance

  InstanceRootEBSType:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - io1
      - sc1
      - st1
      - standard
    Description: The EBS type for the CloudRIG instance

  InstanceAddAdditionalEBS:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    Description: Determine if we the instance should have an additional disk

  InstanceAdditionalEBSType:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - io1
      - sc1
      - st1
      - standard
    Description: The EBS type for the CloudRIG instance

  InstanceAdditionalEBSSize:
    Type: String
    Default: 100
    Description: The EBS size (in Gb) for the CloudRIG instance

  InstanceKeyPairName:
    # We don't use the AWS::EC2::KeyPair::KeyName type to allow it to be empty
    Type: String
    Default: ''
    Description: (Optionnal) The KeyPair associated to the CloudRIG instance. Leave empty if you don't want to use a KeyPair.

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC Id where is the CloudRIG instance is going to be deployed

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The Subnet ids where the CloudRIG instance can be deployed

  SecurityGroupIngressCIDR:
    Type: String
    Description: The CIDR allowed to connect to the CloudRIG instance
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'

  ParsecHostingStartPort:
    Type: String
    Default: 8000
    Description: The Parsec hosting start port (usually 8000)

  ParsecHostingEndPort:
    Type: String
    Default: 8003
    Description: The Parsec hosting end port (usually 8003)

  ParsecServerKey:
    Type: String
    NoEcho: true
    Description: The Parsec server key

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Instance Configuration"
        Parameters:
          - InstanceSize
          - InstanceAMIId
          - InstanceSpotMaximumPrice
          - InstanceKeyPairName
      - Label:
          default: "Storage Configuration"
        Parameters:
          - InstanceRootEBSType
          - InstanceAddAdditionalEBS
          - InstanceAdditionalEBSType
          - InstanceAdditionalEBSSize
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - SubnetIds
          - SecurityGroupIngressCIDR
      - Label:
          default: "Parsec Configuration"
        Parameters:
          - ParsecHostingStartPort
          - ParsecHostingEndPort
          - ParsecServerKey

Conditions:
  ShouldUseAKeyPair: !Not [ !Equals [ !Ref InstanceKeyPairName, "" ]]
  ShouldDeployAnAdditionalDisk: !Equals [ !Ref InstanceAddAdditionalEBS, "" ]
  IsInstanceSupportsEphemeralDisks: !Equals [ !Ref InstanceSize, "g2.2xlarge" ]

Mappings:
  CloudRIGStaticConfiguration:
    Versionning:
      LambdaCodeVersion: 1.0

Resources:

  #
  #
  #  PERMISSIONS
  #
  #

  CloudRIGRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cloudrig-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: cloudrig-role-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'ec2:CreateTags'
                Resource: 'arn:aws:ec2:*::image/*'
              - Effect: Allow
                Action:
                  - 'ec2:CreateImage'
                  - 'ec2:DeleteSnapshot'
                  - 'ec2:CancelSpotInstanceRequests'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeImages'
                  - 'ec2:DeregisterImage'
                  - 'ec2:TerminateInstances'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'events:DeleteRule'
                  - 'events:ListRules'
                  - 'events:RemoveTargets'
                Resource: 'arn:aws:events:*:*:rule/*'
              - Effect: Allow
                Action:
                  - 'events:PutTargets'
                  - 'events:PutRule'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:AddPermission'
                  - 'lambda:RemovePermission'
                Resource: 'arn:aws:lambda:*:*:function:*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:log-group:*'
              - Effect: Allow
                Action: 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:log-group:*:*:*'
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: '*'

  #
  #
  #   EC2 INSTANCE CREATION AND CONFIGURATION
  #
  #

  CloudRIGInstanceProfileRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cloudrig-instance-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM'
      Policies:
        - PolicyName: cloudrig-role-delete-tags-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'ec2:DeleteTags'
                Resource: 'arn:aws:ec2:*:*:instance/*'
                Condition:
                  StringEquals:
                    'ec2:ResourceTag/cloudrig': 'true'

  CloudRIGInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: cloudrig-instance-profile
      Path: /
      Roles:
        - !Ref CloudRIGInstanceProfileRole

  CloudRIGInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: cloudrig-security-group
      GroupDescription: CloudRIG Security group
      SecurityGroupIngress:
        - CidrIp: !Ref SecurityGroupIngressCIDR
          Description: Allow ingress to Parsec
          IpProtocol: tcp
          FromPort: !Ref ParsecHostingStartPort
          ToPort: !Ref ParsecHostingEndPort
      VpcId: !Ref VpcId

  CloudRIGSpotFleetIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cloudrig-spotfleet
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - spotfleet.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: cloudrig-spotfleet-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                - 'ec2:*'
                - 'iam:ListRoles'
                - 'iam:PassRole'
                - 'iam:ListInstanceProfiles'
                Resource: '*'

  CloudRIGSpotFleet:
    Type: AWS::EC2::SpotFleet
    Properties:
      SpotFleetRequestConfigData:
        AllocationStrategy: lowestPrice
        IamFleetRole: !GetAtt CloudRIGSpotFleetIamRole.Arn
        InstanceInterruptionBehavior: stop
        LaunchSpecifications:
          - BlockDeviceMappings:
            - DeviceName: '/dev/sda1'
              Ebs:
                VolumeType: !Ref InstanceRootEBSType
            - !If
              - ShouldDeployAnAdditionalDisk
              - DeviceName: '/dev/sdb1'
                Ebs:
                  VolumeSize: !Ref InstanceAdditionalEBSSize
                  VolumeType: !Ref InstanceAdditionalEBSType
              - !Ref AWS::NoValue
            - !If
              - IsInstanceSupportsEphemeralDisks
              - DeviceName: '/dev/xvdca'
                VirtualName: 'ephemeral0'
              - !Ref AWS::NoValue
            InstanceType: !Ref InstanceSize
            ImageId: !Ref InstanceAMIId
            KeyName: !If [ShouldUseAKeyPair, !Ref InstanceKeyPairName, !Ref "AWS::NoValue"]
            SubnetId: !Join [',', !Ref SubnetIds]
            SecurityGroups:
            - GroupId: !GetAtt CloudRIGInstanceSecurityGroup.GroupId
            UserData:
              "Fn::Base64": !Sub network_server_start_port=8000:app_host=1:server_key=${ParsecServerKey}:app_check_user_data=1
        SpotPrice: !Ref InstanceSpotMaximumPrice
        Type: maintain
        TargetCapacity: 0

  #
  #
  #  DATA PERSISTENCE LAMBDAS
  #
  #

  CloudRIGOrchestrationLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: cloudrig-lambda
      Description: CloudRIG Orchectration lambda
      Handler: "index.handler"
      MemorySize: 128
      Role: !GetAtt CloudRIGRole.Arn
      Runtime: "nodejs8.10"
      Timeout: 30
      Environment:
        Variables:
          CLOUDRIG_SPOTFLEET_REQUEST_ID: !Ref CloudRIGSpotFleet
      Code:
        S3Bucket: !Sub "cloudrig-lambda-code-${AWS::Region}"
        S3Key: !Join
          - "/"
          - - "cloudrig"
            - !FindInMap [CloudRIGStaticConfiguration, Versionning, LambdaCodeVersion]
            - "cloudrig-lambda-orchestration-code.zip"

  CloudRIGOrchestrationLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CloudRIGOrchestrationLambda
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !GetAtt CloudRIGCloudWatchRuleInstanceStoppingWatcher.Arn

  CloudRIGSaveLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: cloudrig-save
      Description: CloudRIG Save lambda
      Handler: "index.handler"
      MemorySize: 128
      Role: !GetAtt CloudRIGRole.Arn
      Runtime: "nodejs8.10"
      Timeout: 30
      Environment:
        Variables:
          CLOUDRIG_CLOUDFORMATION_STACK_NAME: !Ref AWS::StackName
      Code:
        S3Bucket: !Sub "cloudrig-lambda-code-${AWS::Region}"
        S3Key: !Join
        - "/"
        - - "cloudrig"
          - !FindInMap [CloudRIGStaticConfiguration, Versionning, LambdaCodeVersion]
          - "cloudrig-lambda-handle-ami-created-code.zip"

  CloudRIGSaveLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CloudRIGSaveLambda
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !GetAtt CloudRIGCloudWatchRuleInstanceSave.Arn

  CloudRIGCloudWatchRuleInstanceStoppingWatcher:
    Type: AWS::Events::Rule
    Properties:
      Name: cloudrig-watch
      Description: Watch if the instance is stopped and snapshot it
      EventPattern: {
        "source": [
          "aws.ec2"
        ],
        "detail-type": [
          "EC2 Instance State-change Notification"
        ],
        "detail": {
          "state": [
            "stopped"
          ]
        }
      }
      State: DISABLED
      Targets:
        - Id: "trigger-cloudrig-orchestration-lambda"
          Arn: !GetAtt CloudRIGOrchestrationLambda.Arn

  CloudRIGCloudWatchRuleInstanceSave:
    Type: AWS::Events::Rule
    Properties:
      Name: cloudrig-save
      Description: Check when the new AMI is ready and disable the this event rule
      ScheduleExpression: "rate(1 minute)"
      State: DISABLED
      Targets:
        - Id: "trigger-cloudrig-save-lambda"
          Arn: !GetAtt CloudRIGSaveLambda.Arn


Outputs:
  CloudRIGSpotFleetId:
    Description: The CloudRIG SpotFleet Id used to run the CloudRIG instance
    Value: !Ref CloudRIGSpotFleet
